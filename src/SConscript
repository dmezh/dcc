Import('env')

# base dcc sources and headers #
dcc_sources = [
    "common/charutil.c",
    "common/debug.c",
    "common/semval.c",
    "common/util.c",
    "common/yak.ascii.c",

    "parser/ast.c",
    "parser/ast_print.c",
    "parser/symtab.c",
    "parser/symtab_print.c",
    "parser/symtab_util.c",
    "parser/types.c",

    "ir/ir.c",
    "ir/ir_arithmetic.c",
    "ir/ir_print.c",
    "ir/ir_util.c",

    "main.c"
]

dcc_include_paths = [
    "build/gen/",

    "common/",
    "ir/",
    "lexer/",
    "parser/",
    "quads/",
    "target/",

    "./",
]

# bison/flex #
bison_header = 'parser.tab.h'
Depends(dcc_sources, bison_header)

generated_parser_files = env.CFile('gen/parser.tab.c', 'parser/parser.y', YACC_HEADER_FILE=bison_header)
generated_lexer_files = env.CFile('gen/lexer.yy.c', 'lexer/lexer.l')

Depends(generated_parser_files, generated_lexer_files)

generated_parser_lib = env.Library([generated_parser_files, generated_lexer_files],
                                   CPPPATH=dcc_include_paths,
                                   CCFLAGS='-Wall -Werror -fsanitize=undefined -Og'
)

# dcc #
dcc = env.Program('dcc', [dcc_sources, generated_parser_lib],
                  CPPPATH=dcc_include_paths,
                  CCFLAGS='-Wall -Wextra -fsanitize=undefined -Wpedantic -Wunused -Og -g3',
                  LINKFLAGS='-fsanitize=undefined -rdynamic -g3'
)
env.Install('../', dcc)

